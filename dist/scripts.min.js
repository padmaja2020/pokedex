let pokemonRepository = (function () {
  let e = [],
    t = "https://pokeapi.co/api/v2/pokemon/?limit=150",
    n = $(".container"),
    o = $(".row");
  function i(t) {
    return e.push(t);
  }
  function s(e) {
    $(".modal-header");
    let t = $(".modal-body"),
      n = $(".modal-title"),
      o = $(".modal-content");
    n.empty(), t.empty();
    let i = $("<h1 class = 'text-capitalize'>" + e.name + "</h1>"),
      s = $("<p><strong> Types:   " + e.types + "</strong></p>"),
      a = $("<p><strong> Id:  # " + e.id + "</strong></p>"),
      p = $("<p><strong> Weight:  " + e.weight + "</strong></p>"),
      l = (function (e) {
        let t = "";
        e.types.includes("grass")
          ? (t = "green")
          : e.types.includes("fire")
          ? (t = "red")
          : e.types.includes("water")
          ? (t = "blue")
          : e.types.includes("normal")
          ? (t = "gray")
          : e.types.includes("poison")
          ? (t = "purple")
          : e.types.includes("psychic")
          ? (t = "#f366b9")
          : e.types.includes("electric")
          ? (t = "yellow")
          : e.types.includes("fairy")
          ? (t = "light pink")
          : e.types.includes("fighting")
          ? (t = "#d56723")
          : e.types.includes("ground")
          ? (t = "#ab9842")
          : e.types.includes("rock")
          ? (t = "#a38c21")
          : e.types.includes("ice")
          ? (t = "light blue")
          : e.types.includes("ghost")
          ? (t = "#7b62a3")
          : e.types.includes("bug")
          ? (t = "green")
          : e.types.includes("dragon") && (t = "red");
        return t;
      })(e);
    $(o).css("background-color", l);
    let c = $("<p><strong>Height:  " + e.height + "</strong></p>"),
      r = $(
        "<img class = 'img-fluid pokemon-image' alt ='Pokemon Image' src = " +
          e.image +
          ">"
      );
    n.append(i),
      t.append(a),
      t.append(c),
      t.append(p),
      t.append(s),
      t.append(r);
  }
  return {
    add: i,
    getAll: function () {
      return e;
    },
    addListItem: function (e) {
      let t = $('<div class = " col-xs-12  list-group  col-md-3  "></div>'),
        i = $(
          '<button type = "button" class = " pokemon-name list-group-item list-group-action text-capitalize " data-toggle = "modal" data-target = "#modal-container">' +
            e.name +
            "</button>"
        );
      $(t).append(i),
        $(o).append(t),
        $(n).append(o),
        $(i).on("click", function () {
          !(function (e) {
            pokemonRepository.loadDetails(e).then(function () {
              s(e);
            });
          })(e);
        });
    },
    loadList: function () {
      return $.ajax(t, { dataType: "json" })
        .then(function (e) {
          return e;
        })
        .then(function (e) {
          e.results.forEach(function (e) {
            i({ name: e.name, detailsUrl: e.url });
          });
        })
        .catch(function (e) {
          console.error(e);
        });
    },
    loadDetails: function (e) {
      var t = e.detailsUrl;
      return $.ajax(t, { dataType: "json" })
        .then(function (e) {
          return e;
        })
        .then(function (t) {
          (e.image = t.sprites.front_default),
            (e.height = t.height),
            (e.weight = t.weight),
            (e.id = t.id),
            (e.types = []),
            t.types.forEach(function (t) {
              e.types.push(t.type.name);
            });
        })
        .catch(function (e) {
          console.error(e);
        });
    },
    showModal: s,
  };
})();
pokemonRepository.loadList().then(function () {
  pokemonRepository.getAll().forEach(function (e) {
    pokemonRepository.addListItem(e);
  });
});
